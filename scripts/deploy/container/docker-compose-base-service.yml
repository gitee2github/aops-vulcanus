version: '2'
services:
  mysql:
    build:
      context: ./mysql
      dockerfile: Dockerfile
    environment:
      - MYSQL_ROOT_PASSWORD=123456
      - TZ=Asia/Shanghai
      - MYSQL_DATABASE=aops
    ports:
      - 3306:3306
    hostname: mysql
    container_name: mysql
    restart: always
    volumes:
      - /opt/mysql/data:/var/lib/mysql
    command: --character-set-server=utf8mb4 --collation-server=utf8mb4_unicode_ci --init-file /tmp/sql/init.sql
  elasticsearch:
    image: elasticsearch:7.13.1
    user: root
    container_name: elasticsearch
    environment:
      - discovery.type=single-node
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    volumes:
      - /opt/es/data:/usr/share/elasticsearch/data
    hostname: elasticsearch
    restart: always
    ports:
      - 9200:9200
      - 9300:9300
  prometheus:
    image: prom/prometheus
    user: root
    container_name: prometheus
    restart: always
    ports:
      - 9090:9090
    volumes:
      - /etc/prometheus:/etc/prometheus
      - /opt/prometheus/data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
  zookeeper:
    image: zookeeper
    container_name: zookeeper
    user: root
    volumes:
      - /opt/kafka/data:/data
    ports:
      - 2182:2181
  kafka:
    image: ubuntu/kafka:latest
    container_name: kafka
    user: root
    ports:
      - 9092:9092
    environment:
      KAFKA_ADVERTISED_HOST_NAME: kafka
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://127.0.0.1:9092
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092
    volumes:
      - /opt/kafka/logs:/kafka
    depends_on:
      - zookeeper
